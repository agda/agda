(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue1792 (Issue1792.agda). " t)
(agda2-info-action "*Type-checking*" "Finished Issue1792. " t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Set → Set ?1 : Set₁ → Set₁ → Set₁ ?2 : Safe ?3 : Set → Set ?4 : Set → Set → Set → Set ?5 : Set → Set → Set ?6 : D " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6)))
((last . 2) . (agda2-make-case-action '("A fun = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6)))
((last . 2) . (agda2-make-case-action '("(A nofun) B = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6)))
((last . 2) . (agda2-make-case-action '("< mixfix >safe = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6)))
((last . 2) . (agda2-make-case-action '("< mixfix >safe x = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6)))
((last . 2) . (agda2-make-case-action '("(A + B) C = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6)))
((last . 2) . (agda2-make-case-action '("(- A) B = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6)))
((last . 2) . (agda2-make-case-action '("splitP ((d * d₁) d₂) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6)))
