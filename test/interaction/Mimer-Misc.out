(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : (x₁ x₂ : ⊥) → x₁ ≡ x₂ ?1 : A × B → B × A ?2 : f b ≡ f b ?3 : f b ≡ f b ?4 : f b ≡ f b ?5 : Maybe Bool " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5)))
(agda2-give-action 0 "λ ()")
((last . 1) . (agda2-goals-action '(1 2 3 4 5)))
(agda2-give-action 1 "λ z → Σ-i (z .Σ.prf) (z .Σ.wit)")
((last . 1) . (agda2-goals-action '(2 3 4 5)))
(agda2-give-action 2 "refl")
((last . 1) . (agda2-goals-action '(3 4 5)))
(agda2-give-action 3 "refl")
((last . 1) . (agda2-goals-action '(4 5)))
(agda2-give-action 4 "refl")
((last . 1) . (agda2-goals-action '(5)))
(agda2-status-action "")
(agda2-info-action "*Auto*" "Solutions: 0. nothing 1. just false 2. just true " nil)
((last . 1) . (agda2-goals-action '(5)))
(agda2-give-action 5 "just false")
((last . 1) . (agda2-goals-action '()))
