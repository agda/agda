(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool ?1 : Bool ?2 : Bool ?3 : Bool ?4 : A → {x : A} → A → A " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
(agda2-status-action "")
(agda2-info-action "*Normal Form*" "(y : Bool) → parameterised.Bar (λ _ → Void) (λ { true → true ; false → false })" nil)
(agda2-give-action 4 "λ { a {x} b → a }")
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool ?1 : Bool ?2 : Bool ?3 : Bool " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3)))
(agda2-status-action "ShowImplicit")
((last . 2) . (agda2-make-case-action-extendlam '("true {w} → ?" "false {w} → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
((last . 2) . (agda2-make-case-action-extendlam '("z {true} → ?" "z {false} → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
(agda2-status-action "")
((last . 2) . (agda2-make-case-action-extendlam '("true → ?" "false → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool ?1 : Bool ?2 : Bool ?3 : Bool ?4 : A → {x : A} → A → A " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
(agda2-status-action "ShowImplicit")
((last . 2) . (agda2-make-case-action-extendlam '("true → ?" "false → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action-extendlam '("true → ?" "false → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action-extendlam '("true z → ?" "false z → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
