(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking CaseSplitAndImplicits (CaseSplitAndImplicits.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Equality (agda-default-include-path/Agda/Builtin/Equality.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Equality. " t)
(agda2-info-action "*Type-checking*" "Finished CaseSplitAndImplicits. " t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : ⊤ ?1 : ⊤ ?2 : B ?3 : Set " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3)))
((last . 2) . (agda2-make-case-action '("test₁ {A} tt = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
((last . 2) . (agda2-make-case-action '("test₂ {tt} = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
((last . 2) . (agda2-make-case-action '("test₃ .(f _) refl = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
((last . 2) . (agda2-make-case-action '("test₄ .(λ x → x) refl = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
