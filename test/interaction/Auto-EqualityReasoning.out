(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : (n + succ m) ≡ succ (n + m) ?1 : (n + m) ≡ (m + n) " nil)
((last . 1) . (agda2-goals-action '(0 1)))
((last . 2) . (agda2-make-case-action '("lemma zero m = refl" "lemma (succ x) m = cong (λ z → succ z) (lemma x m)")))
((last . 1) . (agda2-goals-action '(0 1)))
((last . 2) . (agda2-make-case-action '("addcommut zero zero = refl" "addcommut zero (succ x) = sym (cong (λ z → succ z) (addcommut x zero))" "addcommut (succ x) m = begin (succ (x + m) ≡⟨ cong (λ z → succ z) (addcommut x m) ⟩ (succ (m + x) ≡⟨ sym (lemma' m x) ⟩ ((m + succ x) ∎)))")))
((last . 1) . (agda2-goals-action '(0 1)))
