(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue635b (Issue635b.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Prelude (Prelude.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Level (Level.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Level. " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Unit (agda-default-include-path/Agda/Builtin/Unit.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Unit. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Bool (Bool.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Bool (agda-default-include-path/Agda/Builtin/Bool.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Bool. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Bool. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Char (Char.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Char (agda-default-include-path/Agda/Builtin/Char.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Nat (agda-default-include-path/Agda/Builtin/Nat.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Nat. " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Char. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Char. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Float (Float.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Float (agda-default-include-path/Agda/Builtin/Float.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Int (agda-default-include-path/Agda/Builtin/Int.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.String (agda-default-include-path/Agda/Builtin/String.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.List (agda-default-include-path/Agda/Builtin/List.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.List. " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.String. " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Int. " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Float. " t)
(agda2-info-action "*Type-checking*" " Checking Common.String (String.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.List (List.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Nat (Nat.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Nat. " t)
(agda2-info-action "*Type-checking*" " Finished Common.List. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Integer (Integer.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Integer. " t)
(agda2-info-action "*Type-checking*" " Finished Common.String. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Float. " t)
(agda2-info-action "*Type-checking*" " Checking Common.IO (IO.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.IO (agda-default-include-path/Agda/Builtin/IO.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.IO. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Unit (Unit.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Unit. " t)
(agda2-info-action "*Type-checking*" " Finished Common.IO. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Maybe (Maybe.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Maybe. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Prelude. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Product (Product.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Product. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Equality (Equality.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Equality (agda-default-include-path/Agda/Builtin/Equality.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Equality. " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.TrustMe (agda-default-include-path/Agda/Builtin/TrustMe.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.TrustMe. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Equality. " t)
(agda2-info-action "*Type-checking*" "Finished Issue635b. " t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : update (.ρ , .a < .b ∣ .p) vz (max (↑ .a₁ - .n)) ≤V (.ξ , .a' < .b ∣ .q) ?1 : update (.ρ , .a < .b ∣ .p) (vs x) (max (↑ .a₁ - .n)) ≤V (.ξ , .a' < .b ∣ .q) " nil)
((last . 1) . (agda2-goals-action '(0 1)))
((last . 2) . (agda2-make-case-action '("lemma-str vz (p₁ , s) (leZZ p₂) = ?" "lemma-str vz (p₁ , s) leZ∞ = ?" "lemma-str vz (p₁ , s) (le∞∞ p₂) = ?")))
((last . 1) . (agda2-goals-action '(0 1)))
