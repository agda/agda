(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue815 (/home/lawrence/oss/agda/prefer-name-hints-from-ctr-def/test/interaction/Issue815.agda).\n" t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : List A\n?1 : Tree A\n?2 : Tree A\n?3 : Set\n?4 : A\n" nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("go [] [] = ?" "go [] (x ∷ xs) = ?" "go (x ∷ xs) [] = ?" "go (x ∷ xs) (x₁ ∷ xs₁) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("go (node x) (node x₁) = ?" "go (node x) (join l r) = ?" "go (join l r) (node x) = ?" "go (join l r) (join l₁ r₁) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("go (node x) (node x₁) = ?" "go (node x) (join ys ys₁) = ?" "go (join xs xs₁) (node x) = ?" "go (join xs xs₁) (join ys ys₁) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("go (u ^ K) (u₁ ^ K₁) = ?" "go (u ^ K) (u₁ + u₂) = ?" "go (u₁ + u₂) (u ^ K) = ?" "go (u₁ + u₂) (u₃ + u₄) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("bla (node left right) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
