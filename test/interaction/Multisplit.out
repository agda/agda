(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool ?1 : A ?2 : Bool ?3 : Set ?4 : Set " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("true == true = ?" "false == true = ?" "true == false = ?" "false == false = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("lookup [] ()" "lookup (x ∷ xs) zero = ?" "lookup (x ∷ xs) (suc i) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("32-cases true true true true true = ?" "32-cases true true true true false = ?" "32-cases true true true false true = ?" "32-cases true true true false false = ?" "32-cases true true false true true = ?" "32-cases true true false true false = ?" "32-cases true true false false true = ?" "32-cases true true false false false = ?" "32-cases true false true true true = ?" "32-cases true false true true false = ?" "32-cases true false true false true = ?" "32-cases true false true false false = ?" "32-cases true false false true true = ?" "32-cases true false false true false = ?" "32-cases true false false false true = ?" "32-cases true false false false false = ?" "32-cases false true true true true = ?" "32-cases false true true true false = ?" "32-cases false true true false true = ?" "32-cases false true true false false = ?" "32-cases false true false true true = ?" "32-cases false true false true false = ?" "32-cases false true false false true = ?" "32-cases false true false false false = ?" "32-cases false false true true true = ?" "32-cases false false true true false = ?" "32-cases false false true false true = ?" "32-cases false false true false false = ?" "32-cases false false false true true = ?" "32-cases false false false true false = ?" "32-cases false false false false true = ?" "32-cases false false false false false = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("No-splits-after-absurd-pattern-encountered zero () j" "No-splits-after-absurd-pattern-encountered (suc n) zero zero = ?" "No-splits-after-absurd-pattern-encountered (suc n) zero (suc j) = ?" "No-splits-after-absurd-pattern-encountered (suc n) (suc i) zero = ?" "No-splits-after-absurd-pattern-encountered (suc n) (suc i) (suc j) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
((last . 2) . (agda2-make-case-action '("Dotted-patterns-are-not-split zero zero = ?" "Dotted-patterns-are-not-split (suc n) zero = ?" "Dotted-patterns-are-not-split .(suc _) (suc i) = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
