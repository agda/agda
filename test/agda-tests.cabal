cabal-version:   2.4
name:            agda-tests
version:         2.8.0
build-type:      Simple
license:         MIT
-- Andreas, 2025-02-20: in case we want to ship this package,
-- we need to fix the license-file to not point to outside of the package root.
license-file:    ../LICENSE
copyright:       (c) 2005-2025 The Agda Team.
author:          The Agda Team, see https://agda.readthedocs.io/en/latest/team.html
maintainer:      The Agda Team
homepage:        https://wiki.portal.chalmers.se/agda/
bug-reports:     https://github.com/agda/agda/issues
category:        Dependent types
synopsis:        Testsuite for Agda
description:
    This package contains the testrunners and QuickCheck properties
    for the Agda package.

tested-with:
    GHC == 9.10.1
    GHC == 9.8.4
    GHC == 9.6.6
    GHC == 9.4.8
    GHC == 9.2.8
    GHC == 9.0.2
    GHC == 8.10.7
    GHC == 8.8.4

source-repository head
  type:     git
  location: https://github.com/agda/agda.git
  subdir:   test

source-repository this
  type:     git
  location: https://github.com/agda/agda.git
  subdir:   test
  tag:      v2.8.0


-- Common stanzas
---------------------------------------------------------------------------

common language

  ghc-options:
      -- ASR (2022-05-31). Workaround to Issue #5932.
      -Werror
      -Werror=cpp-undef
      -Werror=deprecated-flags
      -Werror=deriving-typeable
      -Werror=dodgy-exports
      -Werror=dodgy-foreign-imports
      -Werror=dodgy-imports
      -Werror=duplicate-exports
      -Werror=empty-enumerations
      -Werror=identities
      -Werror=inaccessible-code
      -Werror=inline-rule-shadowing
      -Werror=missed-extra-shared-lib
      -Werror=missing-fields
      -Werror=missing-home-modules
      -Werror=missing-methods
      -Werror=missing-pattern-synonym-signatures
      -Werror=missing-signatures
      -Werror=noncanonical-monad-instances
      -Werror=noncanonical-monoid-instances
      -Werror=overflowed-literals
      -Werror=overlapping-patterns
--      -Werror=redundant-constraints
      -Werror=simplifiable-class-constraints
      -Werror=star-binder
      -Werror=star-is-type
      -Werror=tabs
      -Werror=typed-holes
      -Werror=unbanged-strict-patterns
      -Werror=unrecognised-pragmas
      -Werror=unrecognised-warning-flags
      -Werror=unticked-promoted-constructors
      -Werror=unused-do-bind
      -Werror=unused-foralls
      -Werror=warnings-deprecations
      -Werror=wrong-do-bind

  -- The following warning is an error in GHC >= 8.10.
  if impl(ghc < 8.10)
    ghc-options:
      -Werror=implicit-kind-vars
      -- #6623: Turn off this (nameless) warning:
      -- "Pattern match checker exceeded (2000000) iterations in a case alternative."
      -- See: https://gitlab.haskell.org/ghc/ghc/-/issues/13464
      -Wno-incomplete-patterns
      -Wno-overlapping-patterns

  if impl(ghc < 9.10)
    ghc-options:
      -Werror=semigroup
        -- The semigroup warning is deprecated in GHC 9.10

  if impl(ghc >= 8.10)
    ghc-options:
      -Werror=compat-unqualified-imports
      -Werror=deriving-defaults
      -Werror=redundant-record-wildcards
      -Werror=unused-packages
      -Werror=unused-record-wildcards

  if impl(ghc >= 9.0)
    ghc-options:
      -Werror=invalid-haddock
      -- #6137: coverage checker works only sufficiently well from GHC 9.0
      -Werror=incomplete-patterns
      -Werror=incomplete-record-updates
      -Werror=overlapping-patterns

  -- ASR (2022-04-27). This warning was added in GHC 9.0.2, removed
  -- from 9.2.1 and added back in 9.2.2.
  if impl(ghc == 9.0.2 || >= 9.2.2)
    ghc-options:
      -Werror=unicode-bidirectional-format-characters

  if impl(ghc >= 9.2)
    ghc-options:
      -Werror=operator-whitespace
      -Werror=redundant-bang-patterns

  if impl(ghc >= 9.4)
    ghc-options:
      -Werror=type-equality-out-of-scope

  if impl(ghc >= 9.4 && < 9.10)
    ghc-options:
      -Werror=forall-identifier
        -- The forall-identifier warning is deprecated in GHC 9.10

  default-language: Haskell2010

  -- NOTE: If adding or removing default extensions, also change:
  --         .hlint.yaml
  default-extensions:
      BangPatterns
      BlockArguments
      ConstraintKinds
      --L-T Chen (2019-07-15):
      -- Enabling DataKinds only locally makes the compile time
      -- slightly shorter, see PR #3920.
      -- DataKinds
      DefaultSignatures
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DerivingStrategies
      DerivingVia
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      OverloadedStrings
      PatternSynonyms
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeFamilies
      TypeOperators
      TypeSynonymInstances
      ViewPatterns
      TypeApplications

  other-extensions:
      CPP
      ImplicitParams
      PartialTypeSignatures
      TemplateHaskell
      UndecidableInstances


executable agda-tests
  import:           language

  hs-source-dirs:   .
  main-is:          Main.hs
  other-modules:
      Bugs.Tests
      Compiler.Tests
      CubicalSucceed.Tests
      Fail.Tests
      Interactive.Tests
      Internal.Compiler.MAlonzo.Encode
      Internal.Helpers
      Internal.Interaction.Highlighting.Precise
      Internal.Interaction.Highlighting.Range
      Internal.Interaction.Library
      Internal.Interaction.Options
      Internal.Syntax.Abstract.Name
      Internal.Syntax.Common
      Internal.Syntax.Concrete.Name
      Internal.Syntax.Internal
      Internal.Syntax.Internal.Univ
      Internal.Syntax.Position
      Internal.Termination.CallGraph
      Internal.Termination.CallMatrix
      Internal.Termination.Order
      Internal.Termination.Semiring
      Internal.Termination.SparseMatrix
      Internal.Termination.Termination
      Internal.Tests
      Internal.TypeChecking
      Internal.TypeChecking.Free
      Internal.TypeChecking.Free.Lazy
      Internal.TypeChecking.Generators
      Internal.TypeChecking.Irrelevance
      Internal.TypeChecking.Monad.Base
      Internal.TypeChecking.Positivity
      Internal.TypeChecking.Positivity.Occurrence
      Internal.TypeChecking.Rules.LHS.Problem
      Internal.TypeChecking.SizedTypes
      Internal.TypeChecking.SizedTypes.Syntax
      Internal.TypeChecking.SizedTypes.WarshallSolver
      Internal.TypeChecking.Substitute
      Internal.Utils.AssocList
      Internal.Utils.Bag
      Internal.Utils.BiMap
      Internal.Utils.Cluster
      Internal.Utils.Either
      Internal.Utils.Favorites
      Internal.Utils.FileName
      Internal.Utils.Graph.AdjacencyMap.Unidirectional
      Internal.Utils.IntSet
      Internal.Utils.Lens
      Internal.Utils.List
      Internal.Utils.List1
      Internal.Utils.List2
      Internal.Utils.ListT
      Internal.Utils.Maybe.Strict
      Internal.Utils.Monad
      Internal.Utils.Monoid
      Internal.Utils.PartialOrd
      Internal.Utils.Permutation
      Internal.Utils.RangeMap
      Internal.Utils.SmallSet
      Internal.Utils.Three
      Internal.Utils.Trie
      LaTeXAndHTML.Tests
      LibSucceed.Tests
      Succeed.Tests
      UserManual.Tests
      Utils

  -- Andreas, 2021-08-26, see https://github.com/haskell/cabal/issues/7577
  -- Since 'agda-tests' wants to call 'agda', we have to add it here,
  -- should we want to run 'cabal test'.
  build-tool-depends: Agda:agda

  -- For libraries that come with GHC, we take the shipped version as default lower bound.
  -- For the other libraries, we take the lower bound from the oldest LTS we support.
  -- This is currently LTS 16.31 (last for GHC 8.8.4).
  build-depends:
    -- Please keep in alphabetical order!
    , Agda                 == 2.8.0
    , array                >= 0.5.4.0   && < 0.6
    , base                 >= 4.13.0.0  && < 4.21
    , bytestring           >= 0.10.10.1 && < 0.13
    , containers           >= 0.6.2.1   && < 0.8
        -- containers-0.6.3.1 adds IntSet.mapMonotonic, but its too young for GHC 8.8
    , directory            >= 1.3.6.0   && < 1.4
    , filepath             >= 1.4.2.1   && < 1.6
    , filemanip            >= 0.3.6.3   && < 0.4
    , mtl                  >= 2.2.2     && < 2.4
    , process              >= 1.6.9.0   && < 1.7
    , process-extras       >= 0.7.4     && < 0.8
    , QuickCheck           >= 2.14.1    && < 2.16
    , regex-tdfa           >= 1.3.1.0   && < 1.4
    , split                >= 0.2.3.4   && < 0.3
    , strict               >= 0.4.0.1   && < 0.6
    , tasty                >= 1.2.3     && < 1.6
    , tasty-hunit          >= 0.10.0.3  && < 0.11
    , tasty-quickcheck     >= 0.10.1.2  && < 0.12
        -- NB: tasty-silver 3.2 requires tasty-1.4 at least
    , tasty-silver         >= 3.1.15    && < 3.4
    , temporary            >= 1.3       && < 1.4
    , text                 >= 1.2.4.0   && < 2.2
    , unix-compat          >= 0.5.2     && < 0.8
    , unordered-containers >= 0.2.10.0  && < 0.3
    , uri-encode           >= 1.5.0.7   && < 1.6

  if os(windows)
    build-depends:  Win32 >= 2.6.1.0 && < 2.15

  -- Andreas (2021-10-11): tasty-silver < 3.3 does not work interactively under Windows
  if os(windows)
    build-depends: tasty-silver >= 3.3
