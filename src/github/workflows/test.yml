name: Build, Test, and Benchmark

on:
  push:
    branches:
    - master
    - ci-*
    - release*

    paths: &path_list
    # Prefix with ! to ignore.  Later matches override earlier matches.
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-including-and-excluding-paths
    # Include everything at first (more robust wrt. additions to the repo).
    - '**'
    # Ignore github administrative information except for self (test.yaml).
    - '!.github/**'
    - '.github/workflows/test.yml'
    - '!src/github/**'
    - 'src/github/workflows/test.yml'
    # Ignore other components not contributing to this test.
    - '!src/agda-bisect/**'
    - '!src/fix-whitespace/**'
    - '!src/hs-tags/**'
    - '!src/release-tools/**'
    - '!.travis'
    - '!macros/**'
    - '!notes/**'
    - '!.mailmap'
    - '!.gitignore'
    - '!.hlint.yaml'
    - '!.travis.yml'
    - '!CHANGELOG.md'
    - '!HACKING.md'
    - '!LICENSE'
    - '!README.md'
    - '!fix-whitespace.yaml'
    - '!hie*.yaml'
    - '!stack-*.yaml'
    - '!touchup.sh'

  pull_request:
    paths: *path_list

  workflow_dispatch:

env:
  # Part 1: Versions (need update)
  ###########################################################################

  # Andreas, 2022-11-24, set the stack version here so that it is easily
  # shared between the jobs.
  STACK_VER: "2.9.3"
  # Andreas, 2022-03-26, 2022-11-28:
  # GHC_VER should be given as x.y.z (as opposed to x.y only)
  # because it is used verbatim when referring to stack-x.y.z.yaml.
  GHC_VER: "9.4.4"

  # Part 2: Variables that should not have to be changed
  ###########################################################################

  # # Other variables (local to this workflow)
  # APT_GET_OPTS: "-yqq --no-install-suggests --no-install-recommends"

  # Variables of/for the Makefile
  PARALLEL_TESTS: 2
  BUILD_DIR: "dist" #Â relative path, please!
  AGDA_TESTS_OPTIONS: "-j${PARALLEL_TESTS} --hide-successes"
  STACK: "stack --system-ghc"

  # tasty configuration (see issue #3905)
  TASTY_ANSI_TRICKS: "false"

jobs:

  # Step 1: Building Agda
  ###########################################################################

  build:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')

    runs-on: &runs_on ubuntu-22.04
    steps:
    - uses: styfle/cancel-workflow-action@0.11.0
      # Andreas, 2022-12-05, issue #6388: do not cancel on `master`!
      if: github.ref != 'refs/heads/master'
      with:
        access_token: ${{ github.token }}

    - &checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - &haskell_setup
      uses: haskell/actions/setup@v2
      with:
        ghc-version: ${{ env.GHC_VER }}
        stack-version: ${{ env.STACK_VER }}
        enable-stack: true

    # The Makefile tests whether stack.yaml is present to decide on stack vs. cabal build.
    - name: "Copy stack-${{ env.GHC_VER}}.yaml to stack.yaml"
      run:  cp stack-${{ env.GHC_VER }}.yaml stack.yaml

    - &icu
      name: Determine the ICU version
      run: |
        uconv --version
        export ICU_VER="$(uconv --version | sed -ne 's/uconv v.* ICU \([0-9][0-9.]*\)/\1/p')"
        echo "ICU_VER=${ICU_VER}"
        echo "ICU_VER=${ICU_VER}" >> "${GITHUB_ENV}"
      # The output of unconv --version looks like "uconv v2.1  ICU 72.1" from which we extract "72.1"

    - name: Restore cache from approximate key
      uses: actions/cache/restore@v3
      id: cache
      with:
        # Andreas, 2023-01-24:
        # Stack seems to insist to rebuild Agda from scratch even when ~/.stack-work is restored.
        # Since it balloons the cache entry from 330 MB to 790 MB, don't include it in the cache.
        path: &cache_path |
          ~/.stack

        # A unique cache is used for each stack.yaml.
        key: &cache_key test.yml-ghc-${{ env.GHC_VER }}-stack-${{ env.STACK_VER }}-icu-${{ env.ICU_VER }}-${{ hashFiles('stack.yaml', 'Agda.cabal') }}
        restore-keys:   test.yml-ghc-${{ env.GHC_VER }}-stack-${{ env.STACK_VER }}-icu-${{ env.ICU_VER }}-

    - name: "Install dependencies for Agda and its test suites"
      ## Always do this step, even if we got a cache hit.  Should be fast in case we got a hit.
      # if: ${{ !steps.cache.outputs.cache-hit }}
      run: make install-deps
      ## This used to be: make STACK_OPTS=--silent install-deps
      ## but printing stuff might not hurt here.

    - name: "Build Agda"
      run: make BUILD_DIR="${BUILD_DIR}" install-bin

    - name: "Run tests for the size solver"
      run: |
        export PATH=${HOME}/.local/bin:${PATH}
        make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" size-solver-test

    - name: "Pack artifacts"
      # This step should go into the Makefile.
      run: |
        strip ${BUILD_DIR}/build/agda-tests/agda-tests \
          ${BUILD_DIR}/build/agda/agda \
          ${BUILD_DIR}/build/agda-mode/agda-mode

        tar --use-compress-program zstd -cvf dist.tzst \
          ${BUILD_DIR}/build/agda-tests/agda-tests \
          ${BUILD_DIR}/build/agda/agda \
          ${BUILD_DIR}/build/agda-mode/agda-mode

        tar --use-compress-program zstd -cvf stack-work.tzst .stack-work stack.yaml stack.yaml.lock

    - name: "Upload artifacts"
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        retention-days: 1
        name: agda-${{ runner.os }}-${{ github.sha }}
        path: |
          dist.tzst
          stack-work.tzst

    - name: Clear old cache
      if:   ${{ steps.cache.outputs.cache-hit }}
      env:
        KEY: ${{ steps.cache.outputs.cache-matched-key }}
        GH_TOKEN: ${{ github.token }}
      run: |
        gh extension install actions/gh-actions-cache
        gh actions-cache delete -B ${{ github.ref }} ${{ env.KEY }} --confirm
      # Don't fail if cache cannot be deleted
      continue-on-error: true

    - name: Save cache
      uses: actions/cache/save@v3
      if:   always()  # save cache even when build fails
      with:
        key:  *cache_key
        path: *cache_path

  # Step 2a: Basic testsuites: succeed, fail, etc.
  ###########################################################################

  test:
    needs: build
    runs-on: *runs_on

    steps:
    - *checkout
    - *haskell_setup

    - &download_artifact
      uses: actions/download-artifact@v3
      with:
        name: agda-${{ runner.os }}-${{ github.sha }}

    - &unpack_artifact
      name: "Unpack artifacts"
      run: |
        tar --use-compress-program zstd -xvf dist.tzst
        tar --use-compress-program zstd -xvf stack-work.tzst

    - *icu
    - &cache
      name: Restore cache from exact key
      uses: actions/cache/restore@v3
      id: cache
      with:
        path: *cache_path
        key:  *cache_key

    - name: "Suite of tests for bugs"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" bugs
      #    14s (2022-06-17)

    - name: "Suite of successful tests: mini-library Common"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" common
      #     8s (2022-06-17)

    - name: "Suite of successful tests"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" succeed
      # 4m 14s (2022-06-17)

    - name: "Suite of failing tests"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" fail
      # 2m  0s (2022-06-17)

    - name: "User manual (test)"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" user-manual-test
      #    13s (2022-06-17)

    - name: "Suite of examples"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" examples
      #    41s (2022-06-17)

    - name: "Suite of interactive tests"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" interactive
      #     0s (2022-06-17)

    - name: "Successful tests using Agda as a Haskell library"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" api-test
      #    21s (2022-06-17)

    - name: "Internal test suite"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" internal-tests
      #    11s (2022-06-17)

    - name: "Benchmark"
      run: |
        make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" benchmark-without-logs
        make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" benchmark-summary
      # 6m  3s (2022-06-17)

    - name: "Compiler tests"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" compiler-test
      # 9m 34s (2022-06-17)


  # Step 2b: tests involving the standard library
  ###########################################################################

  stdlib-test:
    needs: build
    runs-on: *runs_on

    steps:
    - *checkout
    - *haskell_setup
    - *download_artifact
    - *unpack_artifact
    - *icu
    - *cache

    - name: "Standard library test"
      run: |
        # ASR (2021-01-17). `cabal update` is required due to #5138.
        # We should also use `stack` in this test.
        cabal update
        make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" std-lib-test

    - name: "Standard library compiler tests"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" std-lib-compiler-test

    - name: "Successful tests using the standard library"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" std-lib-succeed

    - name: "Interaction tests using the standard library"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" std-lib-interaction


  # Step 2c: testing the interaction and the LaTeX/HTML backend
  ###########################################################################

  interaction-latex-html:
    needs: build
    runs-on: *runs_on

    steps:
    - *checkout
    - *haskell_setup
    - *download_artifact
    - *unpack_artifact
    - *icu
    - *cache

    - name: "Install Tex Live and Emacs"
      run: |
        sudo apt-get update
        sudo apt-get install texlive-binaries ${APT_GET_OPTS}
        sudo apt-get install emacs-nox ${APT_GET_OPTS}

    - name: "Suite of tests for the LaTeX and HTML backends"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" DONT_RUN_LATEX=Y latex-html-test

    - name: "Testing the Emacs mode"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" testing-emacs-mode

    - name: "Suite of interaction tests"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" interaction
      # 2m 39s (2022-06-17)
      # This test has erratic outages (#5619), so we place it late in the queue.

  # Step 2d: testing the cubical library
  ###########################################################################

  cubical:
    needs: build
    runs-on: *runs_on

    steps:
    - *checkout
    - *haskell_setup
    - *download_artifact
    - *unpack_artifact
    - *icu
    - *cache

    - name: "Cubical library test"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" cubical-test

    - name: "Successful tests using the cubical library"
      run: make BUILD_DIR="${GITHUB_WORKSPACE}/${BUILD_DIR}" cubical-succeed
