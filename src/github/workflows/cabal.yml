name: Build (cabal)

on:
  push:
    branches:
    - master
    - ci-*
    - release*
    paths: &trigger_path_list
    - '.github/workflows/cabal.yml'
    - 'Agda.cabal'
    - 'Setup.hs'
    - 'src/agda-mode/**'
    - 'src/full/**'
    - 'src/main/**'
    - 'test/**.hs'
  pull_request:
    paths: *trigger_path_list

defaults:
  run:
    shell: bash

jobs:
  auto-cancel:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')
    runs-on: Ubuntu-latest # Required, but it can be anything here.

    steps:
    - uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}

  cabal:
    needs: auto-cancel

    timeout-minutes: 60

    # In these fields, we cannot refer to env.
    # Thus, we need redundant entries in the matrix.
    name: Cabal ${{ matrix.os }} ${{ matrix.ghc-ver }} ${{ matrix.description }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        ghc-ver: [9.4.4, 9.2.5, 9.0.2, 8.10.7, 8.8.4, 8.6.5, 8.4.4, 8.2.2, 8.0.2]
        # Need to mention "cabal-ver" at least once in the matrix, otherwise matrix.cabal-ver is an actionlint error.
        cabal-ver: ['3.8']
        cabal-flags: ['--enable-tests -f enable-cluster-counting']
        include:
          ## Latest GHC, special builds

          # Linux, w/o tests
          - os: ubuntu-22.04
            ghc-ver: '9.4.4'
            # Can't leave cabal-flags empty here lest it becomes the default value.
            cabal-flags: '--disable-tests'
            description: 'w/o tests'

          # Linux, with -f cpphs
          - os: ubuntu-22.04
            ghc-ver: '9.4.4'
            cabal-flags: '--enable-tests -f cpphs'
            description: '-f cpphs'

          # Linux, without -f enable-cluster-counting but with -f debug
          - os: ubuntu-22.04
            ghc-ver: '9.4.4'
            cabal-flags: '--enable-tests -f debug'
            description: '-f debug'

          # Linux, with mtl-2.3 and everything
          - os: ubuntu-22.04
            ghc-ver: '9.4.4'
            ## Andreas, 2022-11-23: Test mtl-2.3.1 here which has breaking changes.
            ## Note: -c 'mtl >= 2.3.1' with single quotes does not get communicated properly.
            ## (The single quotes stay, and "-c 'mtl" is an option parse error for cabal.)
            cabal-flags: |
              --enable-tests -f enable-cluster-counting -f debug -c mtl>=2.3.1
            description: 'mtl 2.3'

          # macOS with default values
          - os: macos-12
            ghc-ver: '9.4.4'

          # Windows with default values
          - os: windows-2022
            ghc-ver: '9.4.4'

    # Default values
    env:
      GHC_VER:   ${{ matrix.ghc-ver || '9.4.4' }}
      CABAL_VER: ${{ matrix.cabal-ver || '3.8' }}
      FLAGS:     ${{ matrix.cabal-flags || '--enable-tests -f enable-cluster-counting' }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: haskell/actions/setup@v2
      id: setup-haskell
      with:
        ghc-version: ${{ env.GHC_VER }}
        cabal-version: ${{ env.CABAL-VER }}

    - name: Environment settings based on the Haskell setup
      run: |
        export GHC_VER=$(ghc --numeric-version)
        export CABAL_VER=$(cabal --numeric-version)
        echo "GHC_VER   = ${GHC_VER}"
        echo "CABAL_VER = ${CABAL_VER}"
        echo "GHC_VER=${GHC_VER}"       >> ${GITHUB_ENV}
        echo "CABAL_VER=${CABAL_VER}"   >> ${GITHUB_ENV}
      # From now on, env.{GHC|CABAL}_VER are the precise versions.

    # from: https://github.com/haskell/text-icu/blob/c73d7fe6f29e178d3ea40160e904ab39236e3c9d/.github/workflows/cabal-mac-win.yml#L29-L32
    - name: Setup MSYS path (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: |
        echo "C:\msys64\mingw64\bin;C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Install the ICU library (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        pacman --noconfirm -Sy msys2-keyring mingw-w64-x86_64-pkg-config mingw-w64-x86_64-icu

    - name: Set up pkg-config for the ICU library (macOS)
      if: ${{ runner.os == 'macOS' }}
      run: |
        export PKG_CONFIG_PATH=$(brew --prefix)/opt/icu4c/lib/pkgconfig
        echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}" >> ${GITHUB_ENV}
        # print some information to debug pkg-config
        echo "$ export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}"
        echo "$ ls -l ${PKG_CONFIG_PATH}"
        ls -l ${PKG_CONFIG_PATH}
        echo "$ pkg-config --modversion icu-i18n"
        pkg-config --modversion icu-i18n

    - name: Configure the build plan
      run: |
        cabal update
        cabal configure -O0 ${FLAGS}

    - name: Restore cache from approximate key
      uses: actions/cache/restore@v3
      id: cache
      with:
        path: &cache_path |
          ${{ steps.setup-haskell.outputs.cabal-store }}
        key: &cache_key cabal.yml-${{ runner.os }}-ghc-${{ env.GHC_VER }}-cabal-${{ env.CABAL_VER }}-${{ hashFiles('**/plan.json') }}
        restore-keys:   cabal.yml-${{ runner.os }}-ghc-${{ env.GHC_VER }}-cabal-${{ env.CABAL_VER }}-

    - name: Install dependencies
      run: |
        cabal build --only-dependencies

    - name: Build Agda with ${{ matrix.cabal-flags }}
      run: |
        cabal build

    - name: Clear old cache
      if:   ${{ steps.cache.outputs.cache-hit }}
      env:
        KEY: *cache_key
        GH_TOKEN: ${{ github.token }}
      run: |
        gh extension install actions/gh-actions-cache
        gh actions-cache delete ${{ env.KEY }} --confirm
      # Don't fail if cache cannot be deleted
      continue-on-error: true

    - name: Save cache
      uses: actions/cache/save@v3
      if:   always()  # save cache even when build fails
      with:
        key:  *cache_key
        path: *cache_path
