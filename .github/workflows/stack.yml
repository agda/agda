name: Build (stack)

on:
  push:
    branches:
    - master
    - issue*
    - release*
    paths:
    - '.github/workflows/stack.yml'
    - 'Agda.cabal'
    - 'Setup.hs'
    - 'stack*.yaml'
    - 'src/agda-mode/**'
    - 'src/full/**'
    - 'src/main/**'
    - 'src/size-solver/**'
    - 'test/**.hs'
  pull_request:
    paths:
    - '.github/workflows/stack.yml'
    - 'Agda.cabal'
    - 'Setup.hs'
    - 'stack*.yaml'
    - 'src/agda-mode/**'
    - 'src/full/**'
    - 'src/main/**'
    - 'src/size-solver/**'
    - 'test/**.hs'

jobs:
  auto-cancel:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')

    runs-on: Ubuntu-latest #Â Required, but it can be anything here.

    steps:
    - uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

  stack:
    needs: auto-cancel

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        stack-ver: [2.7.1]
        ghc-ver: [9.0.1, 8.10.4, 8.8.4, 8.6.5, 8.4.4, 8.2.2, 8.0.2]
        include:
          - os: macos-latest
            ghc-ver: 9.0.1
            stack-ver: 2.7.1
          - os: windows-latest
            ghc-ver: 9.0.1
            stack-ver: 2.7.1

    env:
      ARGS: "--stack-yaml=stack-${{ matrix.ghc-ver }}.yaml --no-terminal"
      EXTRA_ARGS: "--fast"
      NON_DEFAULT_FLAGS: "--flag Agda:enable-cluster-counting --flag Agda:cpphs --flag Agda:debug"

      # The following is used by Windows only
      ICU_FILE: "mingw-w64-x86_64-icu-68.2-3-any.pkg.tar.zst"

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc-ver }}
        stack-version: ${{ matrix.stack-ver }}
        enable-stack: true

    - name: Update and configure stack package index
      run: |
        stack update --silent
        if [[ "$OSTYPE" == "linux-gnu"* || "$OSTYPE" == "darwin"* ]]; then
          echo "system-ghc: true" >> ~/.stack/config.yaml
        else
          echo "system-ghc: true" >> ${STACK_ROOT}/config.yaml
        fi
        stack build ${ARGS} --dry-run

    - uses: actions/cache@v2
      name: Cache dependencies (Unix-like)
      id: cache-on-unix
      if: ${{ runner.os == 'Linux' }}
      with:
        path: "~/.stack"
        # A unique cache is used for each stack.yaml.
        key: |
          ${{ runner.os }}-stack-01-${{ matrix.stack-ver }}-${{ hashFiles(format('stack-{0}.yaml.lock', matrix.ghc-ver)) }}

    - uses: actions/cache@v2
      name: Cache dependencies (Windows)
      id: cache-on-win64
      if: ${{ runner.os == 'Windows' }}
      with:
        path: ${{ env.STACK_ROOT }}
        key: |
          ${{ runner.os }}-stack-01-${{ matrix.stack-ver }}-${{ hashFiles(format('stack-{0}.yaml.lock', matrix.ghc-ver)) }}

    - name: Install the icu library (Ubuntu)
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update -qq
        sudo apt-get install libicu-dev -qq

    - name: Install the icu library (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        stack exec ${ARGS} -- wget -q http://repo.msys2.org/mingw/x86_64/${ICU_FILE}
        stack exec ${ARGS} -- pacman -U --noconfirm ${ICU_FILE}

    - name: Install the numa library (Ubuntu, GHC 8.4.4)
      if: ${{ runner.os == 'Linux' && matrix.ghc-ver == '8.4.4' }}
      run: |
        sudo apt-get install libnuma-dev -qq

    - name: Install dependencies for Agda and `agda-tests` (i.e. the test suite).
      if: ${{ !steps.cache-on-unix.outputs.cache-hit && !steps.cache-on-win64.outputs.cache-hit }}
      run: stack build ${ARGS} ${EXTRA_ARGS} ${NON_DEFAULT_FLAGS} --test --only-dependencies --silent

    - name: Build Agda with the default flags in Agda.cabal. Also build `agda-tests` (i.e. the test suite).
      run: stack build ${ARGS} ${EXTRA_ARGS} --test --no-run-tests

    - name: Build Agda with the non-default flags Agda.cabal.
      run: stack build ${ARGS} ${EXTRA_ARGS} ${NON_DEFAULT_FLAGS}
