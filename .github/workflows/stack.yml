######################################################
##                                                  ##
##  !!!! Autogenerated YAML file, do not edit !!!!  ##
##                                                  ##
##  Edit source in /src/github/workflows/ instead!  ##
##                                                  ##
######################################################
jobs:
  auto-cancel:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')
    runs-on: Ubuntu-latest
    steps:
    - uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
  stack:
    defaults:
      run:
        shell: bash
    env:
      EXTRA_ARGS: --fast
      ICU_URL: https://repo.msys2.org/mingw/mingw64/mingw-w64-x86_64-icu-69.1-1-any.pkg.tar.zst
      NON_DEFAULT_FLAGS: --flag Agda:enable-cluster-counting --flag Agda:debug
    needs: auto-cancel
    runs-on: ${{ matrix.os }}
    steps:
    - if: ${{ runner.os == 'macOS' }}
      name: Set up for the ICU library (macOS)
      run: |
        ICU4C=$(brew --prefix)/opt/icu4c
        echo "PKG_CONFIG_PATH=${ICU4C}/lib/pkgconfig" >> "${GITHUB_ENV}"
    - uses: actions/checkout@v3
    - id: haskell-setup
      uses: haskell/actions/setup@v2
      with:
        cabal-update: false
        enable-stack: true
        ghc-version: ${{ matrix.ghc-ver }}
        stack-version: latest
    - name: Environment settings based on the Haskell setup
      run: |
        echo "runner.os         = ${{ runner.os                               }}"
        echo "OSTYPE            = ${{ env.OSTYPE                              }}"
        echo "ghc-path          = ${{ steps.haskell-setup.outputs.ghc-path    }}"
        echo "ghc-exe           = ${{ steps.haskell-setup.outputs.ghc-exe     }}"
        echo "cabal-path        = ${{ steps.haskell-setup.outputs.cabal-path  }}"
        echo "cabal-exe         = ${{ steps.haskell-setup.outputs.cabal-exe   }}"
        echo "cabal-store       = ${{ steps.haskell-setup.outputs.cabal-store }}"
        echo "stack-path        = ${{ steps.haskell-setup.outputs.stack-path  }}"
        echo "stack-exe         = ${{ steps.haskell-setup.outputs.stack-exe   }}"
        echo "stack-root        = ${{ steps.haskell-setup.outputs.stack-root  }}"
        echo "STACK_ROOT (orig) = ${{ env.STACK_ROOT                          }}"
        echo "STACK_ROOT=${{ steps.haskell-setup.outputs.stack-root }}" >> "${GITHUB_ENV}"
        echo "STACK_VER=$(stack --numeric-version)"                     >> "${GITHUB_ENV}"
        GHC_VER=$(ghc --numeric-version)
        echo "GHC_VER=${GHC_VER}"                                       >> "${GITHUB_ENV}"
        echo "ARGS=--stack-yaml=stack-${GHC_VER}.yaml --system-ghc --no-terminal"    >> "${GITHUB_ENV}"
    - if: ${{ runner.os == 'Windows' }}
      name: Install the icu library (Windows)
      run: |
        # stack exec ${ARGS} -- pacman --noconfirm -Syuu
        stack exec ${ARGS} -- pacman --noconfirm -Sy msys2-keyring
        stack exec ${ARGS} -- bash -c "curl -LO ${ICU_URL} && pacman --noconfirm -U *.pkg.tar.zst"
        stack exec ${ARGS} -- pacman --noconfirm -S mingw-w64-x86_64-pkg-config
    - name: Determine the ICU version
      run: |
        ICU_VER=$(stack exec ${ARGS} -- pkg-config --modversion icu-i18n)
        echo "ICU_VER=${ICU_VER}"
        echo "ICU_VER=${ICU_VER}" >> "${GITHUB_ENV}"
    - name: Environment (review)
      run: |
        echo "STACK_ROOT (fix)  = ${STACK_ROOT}"
        echo "STACK_VER         = ${STACK_VER}"
        echo "GHC_VER           = ${GHC_VER}"
        echo "ICU_VER           = ${ICU_VER}"
    - id: cache
      name: Restore cache from approximate key
      uses: actions/cache/restore@v3
      with:
        key: stack.yml-${{ runner.os }}-ghc-${{ env.GHC_VER }}-stack-${{ env.STACK_VER
          }}-icu-${{ env.ICU_VER }}-plan-${{ hashFiles('Agda.cabal', format('stack-{0}.yaml',
          env.GHC_VER)) }}
        path: |
          ${{ env.STACK_ROOT }}
        restore-keys: stack.yml-${{ runner.os }}-ghc-${{ env.GHC_VER }}-stack-${{
          env.STACK_VER }}-icu-${{ env.ICU_VER }}-
    - name: Install dependencies for Agda and `agda-tests` (i.e. the test suite).
      run: stack build ${ARGS} ${EXTRA_ARGS} ${NON_DEFAULT_FLAGS} --test --only-dependencies
    - name: Build Agda with the default flags in Agda.cabal. Also build `agda-tests`
        (i.e. the test suite).
      run: stack build ${ARGS} ${EXTRA_ARGS} --test --no-run-tests
    - name: Build Agda with the non-default flags Agda.cabal.
      run: stack build ${ARGS} ${EXTRA_ARGS} ${NON_DEFAULT_FLAGS}
    - if: always() && steps.cache.outputs.cache-matched-key != steps.cache.outputs.cache-primary-key
      name: Save cache
      uses: actions/cache/save@v3
      with:
        key: ${{ steps.cache.outputs.cache-primary-key }}
        path: |
          ${{ env.STACK_ROOT }}
    strategy:
      fail-fast: false
      matrix:
        ghc-ver:
        - 9.4.5
        include:
        - ghc-ver: 9.4.5
          os: windows-2022
        os:
        - ubuntu-22.04
        - macos-12
    timeout-minutes: 60
name: Build (stack)
'on':
  pull_request:
    paths:
    - .github/workflows/stack.yml
    - Agda.cabal
    - Setup.hs
    - stack-9.4.5.yaml
    - src/size-solver/size-solver.cabal
  push:
    branches:
    - master
    - ci-*
    - release*
    paths:
    - .github/workflows/stack.yml
    - Agda.cabal
    - Setup.hs
    - stack-9.4.5.yaml
    - src/size-solver/size-solver.cabal
  workflow_dispatch: null
