name: Stack build

on:
  push:
    paths:
    - 'src/**'
    - 'stack*.yaml'
    - '.github/workflows/stack.yml'
    - 'Agda.cabal'
    - 'Setup.hs'
    - 'test/**.hs'
  pull_request:
    paths:
    - 'src/**'
    - 'stack*.yaml'
    - '.github/workflows/stack.yml'
    - 'Agda.cabal'
    - 'Setup.hs'
    - 'test/**.hs'

jobs:
  stack:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        ghc-ver: [8.10.2, 8.8.4, 8.6.5, 8.4.4, 8.2.2, 8.0.2]
        include:
          - os: macos-latest
            ghc-ver: 8.10.2
          - os: windows-latest
            ghc-ver: 8.10.1

    env:
      ARGS: "--stack-yaml=stack-${{ matrix.ghc-ver }}.yaml --no-terminal --system-ghc"
      EXTRA_ARGS: "--fast"
      NON_DEFAULT_FLAGS: "--flag Agda:enable-cluster-counting --flag Agda:cpphs --flag Agda:debug"

      # The following is used by Windows only
      ICU_FILE: "mingw-w64-x86_64-icu-65.1-1-any.pkg.tar.xz"

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: actions/setup-haskell@v1
      with:
        ghc-version: ${{ matrix.ghc-ver }}

    - uses: actions/cache@v2
      name: Cache dependencies (Unix-like)
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      with:
        path: "~/.stack"
        # A unique cache is used for each stack.yaml.
        key: ${{ runner.os }}-stack-${{ hashFiles(format('stack-{0}.yaml', matrix.ghc-ver)) }}

    - uses: actions/cache@v2
      name: Cache dependencies (Windows)
      if: ${{ runner.os == 'Windows' }}
      with:
        path: C:\Users\runneradmin\AppData\Roaming\stack
        key: ${{ runner.os }}-stack-${{ hashFiles(format('stack-{0}.yaml', matrix.ghc-ver)) }}

    - name: Update stack package index
      run: stack update

    - name: Install the icu library (Ubuntu)
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update && sudo apt-get install libicu-dev

    - name: Install the icu librery (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        stack exec  ${ARGS} -- wget -q http://repo.msys2.org/mingw/x86_64/${ICU_FILE}
        stack exec  ${ARGS} -- pacman -U --noconfirm ${ICU_FILE}

    - name: Add the icu path to stack configuration (macOS)
      if: ${{ runner.os == 'macOS' }}
      run: printf "extra-lib-dirs:\n - /usr/local/opt/icu4c/lib\nextra-include-dirs:\n - /usr/local/opt/icu4c/include\n" > ~/.stack/config.yaml

    - name: Install dependencies for Agda and `agda-tests` (i.e. the test suite).
      run: stack build ${ARGS} ${EXTRA_ARGS} ${NON_DEFAULT_FLAGS} --test --only-dependencies

    - name: Build Agda with the default flags in Agda.cabal. Also build `agda-tests` (i.e. the test suite).
      run: stack build ${ARGS} ${EXTRA_ARGS} --test --no-run-tests

    - name: Build Agda with the non-default flags Agda.cabal.
      run: stack build ${ARGS} ${EXTRA_ARGS} ${NON_DEFAULT_FLAGS}
