######################################################
##                                                  ##
##  !!!! Autogenerated YAML file, do not edit !!!!  ##
##                                                  ##
##  Edit source in /src/github/workflows/ instead!  ##
##                                                  ##
######################################################
defaults:
  run:
    shell: bash
jobs:
  cabal:
    env:
      FLAGS: -f enable-cluster-counting
      ICU_URL: https://github.com/unicode-org/icu/releases/download/release-69-1/icu4c-69_1-Win64-MSVC2019.zip
    strategy:
      matrix:
        ghc-ver:
        - 9.0.1
        cabal-ver:
        - latest
        os:
        - windows-latest
        - macos-latest
        - ubuntu-18.04
      fail-fast: false
    runs-on: ${{ matrix.os }}
    needs: auto-cancel
    steps:
    - with:
        submodules: recursive
      uses: actions/checkout@v2
    - with:
        cabal-version: ${{ matrix.cabal-ver }}
        ghc-version: ${{ matrix.ghc-ver }}
      uses: haskell/actions/setup@v1
      id: setup-haskell
    - run: |
        export GHC_VER=$(ghc --numeric-version)
        export CABAL_VER=$(cabal --numeric-version)
        echo "GHC_VER   = ${GHC_VER}"
        echo "CABAL_VER = ${CABAL_VER}"
        echo "GHC_VER=${GHC_VER}"       >> ${GITHUB_ENV}
        echo "CABAL_VER=${CABAL_VER}"   >> ${GITHUB_ENV}
      name: Environment settings based on the Haskell setup
    - run: |
        cabal update
        cabal configure ${FLAGS} -O0
      name: Configure the build plan
    - if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update -qq
        sudo apt-get install libicu-dev -qq
      name: Install the icu library (Ubuntu)
    - if: ${{ runner.os == 'Windows' }}
      env:
        ICU_DIR: /c/icu4c
        ICU_FILE: /tmp/icu4c.zip
      run: |
        curl -sSLo ${ICU_FILE} ${ICU_URL}
        7z e ${ICU_FILE} -o${ICU_DIR}
        mkdir -p ${ICU_DIR}/include/unicode
        mv ${ICU_DIR}/*.h ${ICU_DIR}/include/unicode

        echo "extra-lib-dirs: $(cygpath -w ${ICU_DIR})">> ${APPDATA}/cabal/config
        echo "extra-include-dirs: $(cygpath -w ${ICU_DIR}/include)" >> ${APPDATA}/cabal/config
      name: Download the icu4c library from unicode-org (Windows)
    - with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-cabal-01-${{ env.GHC_VER }}-${{ env.CABAL_VER }}-${{
          hashFiles('**/plan.json') }}
      uses: actions/cache@v2
      name: Cache dependencies
      id: cache
    - if: ${{ !steps.cache.outputs.cache-hit }}
      run: |
        cabal build --only-dependencies
      name: Install dependencies
    - run: |
        cabal build
      name: Build Agda
    - run: |
        cabal configure -O0
        cabal build
      name: Build Agda without enable-cluster-counting
  auto-cancel:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')
    runs-on: Ubuntu-latest
    steps:
    - with:
        access_token: ${{ github.token }}
      uses: styfle/cancel-workflow-action@0.6.0
name: Build (cabal)
'on':
  pull_request:
    paths:
    - .github/workflows/cabal.yml
    - Agda.cabal
    - Setup.hs
    - src/agda-mode/**
    - src/full/**
    - src/main/**
    - test/**.hs
  push:
    branches:
    - master
    - ci-*
    - release*
    paths:
    - .github/workflows/cabal.yml
    - Agda.cabal
    - Setup.hs
    - src/agda-mode/**
    - src/full/**
    - src/main/**
    - test/**.hs
