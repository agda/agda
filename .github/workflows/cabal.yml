name: Build (cabal)

on:
  push:
    paths:
    - 'src/**'
    - 'Agda.cabal'
    - 'cabal.project'
    - '.github/workflows/cabal.yml'
    - 'Setup.hs'
    - 'test/**.hs'
  pull_request:
    paths:
    - 'src/**'
    - 'cabal.project'
    - '.github/workflows/cabal.yml'
    - 'Agda.cabal'
    - 'Setup.hs'
    - 'test/**.hs'

defaults:
  run:
    shell: bash

jobs:
  auto-cancel:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')
    runs-on: Ubuntu-latest # Required, but it can be anything here.

    steps:
    - uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

  cabal:
    needs: auto-cancel

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-18.04]
        ghc-ver: [8.10.3]
        cabal-ver: [3.2]
    env:
      FLAGS: "-f enable-cluster-counting"
      ICU_URL: 'https://github.com/unicode-org/icu/releases/download/release-67-1/icu4c-67_1-Win64-MSVC2017.zip'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc-ver }}
        cabal-version: ${{ matrix.cabal-ver }}

    - name: Configure the build plan
      run: |
        cabal update
        cabal configure ${FLAGS} -O0

    - name: Install the icu library (Ubuntu)
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update -qq
        sudo apt-get install libicu-dev -qq

    - name: Add the path to icu4c to the cabal configuration
      if: ${{ runner.os == 'macOS' }}
      run: |
        echo "extra-lib-dirs: /usr/local/opt/icu4c/lib"         >> ~/.cabal/config
        echo "extra-include-dirs: /usr/local/opt/icu4c/include" >> ~/.cabal/config

    - name: Download the icu4c library from unicode-org (Windows)
      if: ${{ runner.os == 'Windows' }}
      env:
        ICU_DIR: '/c/icu4c'
        ICU_FILE: '/tmp/icu4c.zip'
      run: |
        curl -sSLo ${ICU_FILE} ${ICU_URL}
        7z e ${ICU_FILE} -o${ICU_DIR}
        mkdir -p ${ICU_DIR}/include/unicode
        mv ${ICU_DIR}/*.h ${ICU_DIR}/include/unicode

        echo "extra-lib-dirs: $(cygpath -w ${ICU_DIR})">> ${APPDATA}/cabal/config
        echo "extra-include-dirs: $(cygpath -w ${ICU_DIR}/include)" >> ${APPDATA}/cabal/config

    - uses: actions/cache@v2
      name: Cache dependencies
      id: cache
      with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
        # The file `plan.json` contains the build information.
        key: ${{ runner.os }}-cabal-${{ matrix.ghc-ver }}-${{ matrix.cabal-ver }}-${{ hashFiles('**/plan.json') }}

    - name: Install dependencies
      if: ${{ !steps.cache.outputs.cache-hit }}
      run: |
        cabal build --only-dependencies

    - name: Build Agda
      run: |
        cabal build

    - name: Build Agda without enable-cluster-counting
      run: |
        cabal configure -O0
        cabal build

