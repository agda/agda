# Adapted from https://github.com/hvr/multi-ghc-travis

# NB: don't set `language: haskell` here.
language: c

# Explicitly request container-based infrastructure.
sudo: false

cache:
  directories:
  - $HOME/.stack

##############################################################################
# Required Ubuntu packages

# The LaTeX/HTML test-suite requires:
# * `kpsewhich` (included in texlive-binaries)

# The test of the documentation, i.e. `make doc`, requires:
# * `latex` (included in texlive-latex-base)
# * `utf8x.def` (included in texlive-latex-extra)
# * `dvipng` (included in dvipng)

##############################################################################
# Tests

# We use the word 'test' in a broad sense (e.g. it includes the Agda
# test suite, the benchmark suite, the compilation with a specific set
# of dependencies, the testing of other programs like `hTags`, etc.)

# Travis runs the builds on this order.

matrix:
  include:
    - env: TEST=main GHC_VER=8.0.1 CABAL_VER=1.24
      addons:
        apt:
          packages:
            - alex-3.1.7
            - cabal-install-1.24
            - ghc-8.0.1
            - happy-1.19.5
            - nodejs
            - texlive-binaries
          sources:
            - hvr-ghc

    - env: TEST=cpp-and-debug GHC_VER=8.0.1 CABAL_VER=1.24
      addons:
        apt:
          packages:
            - alex-3.1.7
            - cabal-install-1.24
            - ghc-8.0.1
            - happy-1.19.5
          sources:
            - hvr-ghc

    # - env: TEST=haddock GHC_VER=8.0.1 CABAL_VER=1.24
    #   addons:
    #     apt:
    #       packages:
    #         - alex-3.1.7
    #         - cabal-install-1.24
    #         - ghc-8.0.1
    #         - happy-1.19.5
    #       sources:
    #         - hvr-ghc

    - env: TEST=uhc GHC_VER=8.0.1 CABAL_VER=1.24
      addons:
        apt:
          packages:
            - happy-1.19.5
            - cabal-install-1.24
            - ghc-8.0.1
            - alex-3.1.7
          sources:
            - hvr-ghc

    - env: TEST=stack GHC_VER=8.0.1
      addons:
        apt:
          packages:
            - ghc-8.0.1
          sources:
            - hvr-ghc

    - env: TEST=main GHC_VER=7.10.3 CABAL_VER=1.22
      addons:
        apt:
          packages:
            - alex-3.1.7
            - cabal-install-1.22
            - ghc-7.10.3
            - happy-1.19.5
            - nodejs
            - texlive-binaries
          sources:
            - hvr-ghc

    - env: TEST=haddock GHC_VER=7.10.3 CABAL_VER=1.22
      addons:
        apt:
          packages:
            - alex-3.1.7
            - cabal-install-1.22
            - ghc-7.10.3
            - happy-1.19.5
          sources:
            - hvr-ghc

    - env: TEST=main GHC_VER=7.8.4 CABAL_VER=1.18
      addons:
        apt:
          packages:
            - alex-3.1.7
            - cabal-install-1.18
            - ghc-7.8.4
            - happy-1.19.5
            - nodejs
            - texlive-binaries
          sources:
            - hvr-ghc

    - env: TEST=ghc-7.8.4-transformers-0.3.0.0 GHC_VER=7.8.4 CABAL_VER=1.18
      addons:
        apt:
          packages:
            - alex-3.1.7
            - cabal-install-1.18
            - ghc-7.8.4
            - happy-1.19.5
          sources:
            - hvr-ghc

    - env: TEST=main GHC_VER=7.6.3 CABAL_VER=1.18
      addons:
        apt:
          packages:
            - alex-3.1.7
            - cabal-install-1.18
            - ghc-7.6.3
            - happy-1.19.5
            - nodejs
            - texlive-binaries
          sources:
            - hvr-ghc

    - env: TEST=doc
      language: python
      python: "3.3"
      addons:
        apt:
          packages:
            - dvipng
            - texlive-latex-base
            - texlive-latex-extra

  # Builds are loooong, we want to send an email as fast as possible.
  fast_finish: true
  allow_failures:
    - env: TEST=haddock GHC_VER=8.0.1 CABAL_VER=1.24

##############################################################################
before_install:
  - if [[ $TEST != "doc" ]]; then
       export PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:$PATH;
    fi
  - if [[ $TEST == "stack" ]]; then
       mkdir -p ~/.local/bin &&
       travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack';
    fi

##############################################################################
install:
  # How much memory we have.
  - vmstat -s

  # Asking for the shell.
  - echo $SHELL


# The container environment reports a wrong number of cores. We use a
# `sed` script (from https://github.com/hvr/multi-ghc-travis) for
# commenting out `jobs: $ncpus` in the Cabal configuration file.

  - if [[ $TEST != "doc" ]]; then
       cabal --version &&
       ghc --version &&
       haddock --version &&
       emacs --version &&
       export PARALLEL_TESTS=2;
       case "$TEST" in
         stack)
           export PATH=$HOME/.local/bin:$PATH
           ;;
         *)
           cabal update &&
           sed -i 's/^jobs:/-- jobs:/' $HOME/.cabal/config &&
           cat $HOME/.cabal/config &&
           cabal install cabal-install &&
           export PATH=$HOME/.cabal/bin:$PATH &&
           cabal --version
           ;;
       esac
    fi

##############################################################################
# Installing the dependencies

# N.B. that `cabal install` doesn't set up the number of jobs by default
# (cabal-install 1.22.4.0). See https://github.com/haskell/cabal/issues/2628.

# N.B. that we use the `--force-reinstalls` option [Issue 1520].

# TODO (2016-02-21): Split the long lines (`\` doesn't work).

  - if [[ $TEST = "main" || $TEST = "cpp-and-debug" || $TEST = "haddock" || $TEST = "uhc" ]]; then
       if [[ $TEST = "uhc" ]]; then
          cabal install --enable-tests --only-dependencies --force-reinstalls -f uhc;
       else
          cabal install --enable-tests --only-dependencies --force-reinstalls;
       fi
    elif [[ $TEST = "ghc-7.8.4-transformers-0.3.0.0" ]]; then
         cabal install --enable-tests --only-dependencies --force-reinstalls --constraint=transformers==0.3.0.0;
    elif [[ $TEST = "stack" ]]; then
         stack --no-terminal test --bench --only-dependencies;
    fi

##############################################################################
# Installing Agda

  - export BUILD_DIR=$HOME/dist

  - if [[ $TEST = "stack" ]]; then
       stack --no-terminal build --bench --no-run-benchmarks;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR CABAL_OPTS=-v2 install-bin;
    fi

##############################################################################
# Installing Epic

# The Epic backend has been removed. See Issue 1481.

  # - sudo apt-get install libgc-dev
  # - cabal install epic

##############################################################################
# Getting the standard library

  - if [[ $TEST = "main" ]]; then
       make up-to-date-std-lib;
    fi

##############################################################################
# Installing fix-agda-whitespace

  - if [[ $TEST = "main" ]]; then
       make install-fix-agda-whitespace;
    fi

##############################################################################
# Installing Sphinx

# Required for testing the documentation.

# Note that the `--user` option put the Sphinx binaries in
# `$HOME/.local/bin`.

  - if [[ $TEST = "doc" ]]; then
       pip install -r doc/user-manual/requirements.txt &&
       export PATH=$HOME/.local/bin:$PATH;
    fi

##############################################################################
# Installing size-solver and shelltestrunner

# Required for testing the size-solver program.

  - if [[ $TEST = "main" ]]; then
       make install-size-solver &&
       cabal install shelltestrunner;
    fi

##############################################################################
script:

##############################################################################

# We don't run LaTeX/XeLaTeX/LuaLaTeX on Travis (see Issues 1022 and
# 1675), but we still compare the generated tex/html files with the
# golden files.

  - if [[ $TEST = "main" ]]; then
       make check-whitespace;
    fi

  - if [[ $TEST = "main" ]]; then
       make AGDA_TESTS_OPTIONS="-j${PARALLEL_TESTS}" BUILD_DIR=$BUILD_DIR succeed;
    fi

  - if [[ $TEST = "main" ]]; then
       make AGDA_TESTS_OPTIONS="-j${PARALLEL_TESTS}" BUILD_DIR=$BUILD_DIR fail;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR interaction;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR interactive;
    fi

  - if [[ $TEST = "main" ]]; then
       make AGDA_TESTS_OPTIONS="-j${PARALLEL_TESTS}" BUILD_DIR=$BUILD_DIR DONT_RUN_LATEX="Y" latex-html-test;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR examples;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR library-test;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR api-test;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR user-manual-test;
    fi

# ASR (2016-07-08) TODO: Travis is re-preprocessing various Agda
# source files when running the internal test-suite.

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR PARALLEL_TESTS=$PARALLEL_TESTS internal-tests;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR benchmark-without-logs;
    fi

# 2016-04-15: The option `AGDA_TESTS_OPTIONS="-j${PARALLEL_TESTS}"` doesn't work
# with the `compiler-test`.

  - if [[ $TEST = "main" ]]; then
       make AGDA_TESTS_OPTIONS="" BUILD_DIR=$BUILD_DIR compiler-test;
    fi

  - if [[ $TEST = "main" ]]; then
       make AGDA_TESTS_OPTIONS="-j${PARALLEL_TESTS}" BUILD_DIR=$BUILD_DIR lib-succeed;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR lib-interaction;
    fi

  - if [[ $TEST = "main" ]]; then
       make BUILD_DIR=$BUILD_DIR TAGS;
    fi

  - if [[ $TEST = "main" ]]; then
       make test-size-solver;
    fi

  - if [[ $TEST = "main" ]]; then
       make testing-emacs-mode;
    fi

##############################################################################
# Testing compilation with transformers 0.3.0.0 which is shipped with
# GHC 7.8.* [Issues 1156 and 1539]

# N.B. that this test is not include in the Makefile tests.

  - if [[ $TEST = "ghc-7.8.4-transformers-0.3.0.0" ]]; then
       make BUILD_DIR=$BUILD_DIR CABAL_OPTS="-v2 --constraint=transformers==0.3.0.0" install-bin;
    fi

##############################################################################
# Testing compilation with cpp instead of cpphs [Issue #1647]

# N.B. that this test is not include in the Makefile tests.

  - if [[ $TEST = "cpp-and-debug" ]]; then
       make BUILD_DIR=$BUILD_DIR CABAL_OPTS="-v2 -f -cpphs" install-bin;
    fi

##############################################################################
# Testing compilation using the `debug` flag [Issue #2070]

# N.B. that this test is not include in the Makefile tests.

  - if [[ $TEST = "cpp-and-debug" ]]; then
       make BUILD_DIR=$BUILD_DIR CABAL_OPTS="-v2 -f debug" install-bin;
    fi

##############################################################################
# Testing compilation using the `uhc` flag

  - if [[ $TEST = "uhc" ]]; then
       make BUILD_DIR=$BUILD_DIR CABAL_OPTS="-v2 -f uhc" install-bin;
    fi

##############################################################################
# Testing Haddock [Issue 1773]

  - if [[ $TEST = "haddock" ]]; then
       make BUILD_DIR=$BUILD_DIR haddock;
    fi

##############################################################################
# Testing the documentation

  - if [[ $TEST = "doc" ]]; then
       make doc;
    fi

##############################################################################
# Every master and maintenance branches >= 2.5 or >= maint-2.4 must
# be here. You can also add your private branches if you want travis to
# test them.

branches:
  only:
    - master
    - maint-2.4
    - stable-2.5
    - release-2.5.1
