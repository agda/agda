# Liang-Ting Chen 2019-09-07:
# Switched to Build Stages

# NB: don't set `language: haskell` here.
language: c

# Request Ubuntu Trusty (14.04 LTS).
dist: trusty

# Explicitly request sudo-enabled virtual environments [Issue #1992].
sudo: required

##############################################################################
# Every master and maintenance branches >= 2.5 or >= maint-2.4 must
# be here. You can also add your private branches if you want travis to
# test them.

branches:
  only:
    - master
    - future
    - maint-2.4
    - stable-2.5
    - /^release-.*/
    # Test all issue* branches. Saves you opening a PR.
    - /^issue.*/

##############################################################################
# The submodule is only needed by stdlib compiler test, so
# it is fetched manually in the `install` section.
#
git:
  submodules: false

##############################################################################
# Stages:
#
# - Main: Agda is compiled via Cabal and tested, including the test
#   suite, the benchmark suite, and the compilation with a specific set of
#   dependencies, the testing of other programs like `hTags`, etc.)
#
# - Documentation: User manual and Haddock are compiled.

stages:
  - name: main
    if: NOT (commit_message =~ main\s+skip|skip\s+main)
  - name: documentation
    if: NOT (commit_message =~ doc\s+skip|skip\s+doc)

jobs:
  allow_failures:
    # - env: TEST=USER_MANUAL BUILD=NOTHING
    #   language: python
    #   python: "3.4"
  # Builds are loooong, we want to send an email as fast as possible.
  fast_finish: true

  include:
    ##############################################################################
    # Main stage
    #
    # The builds involving the testsuite (60-80min) are run then.
    - &complete-job
      stage: main
      env: GHC_VER=8.8.1 CABAL_VER=2.4
      addons:
        apt:
          packages:
            - cabal-install-2.4
            - ghc-8.8.1
            - texlive-binaries
          sources:
            - hvr-ghc
      before_install:
        - export PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:$PATH
        - export PATH=$HOME/.local/bin:$PATH
        - export BUILD_DIR=$HOME/dist
        - export PARALLEL_TESTS=2
        - export PATH=$HOME/.cabal/bin:$PATH
        - export PATH=$HOME/texlive/bin/x86_64-linux:$PATH
          # - export AGDA_HOME=`pwd` this is $TRAVIS_BUILD_DIR
      install:
        - .travis/cabal_install
      ##############################################################################
      script:
        - .travis/cabal_script

    - <<: *complete-job
      env: GHC_VER=8.6.5 CABAL_VER=2.4
      addons:
        apt:
          packages:
            - cabal-install-2.4
            - ghc-8.6.5
            - texlive-binaries
          sources:
            - hvr-ghc

    - <<: *complete-job
      env: GHC_VER=8.4.4 CABAL_VER=2.2
      addons:
        apt:
          packages:
            - cabal-install-2.2
            - ghc-8.4.4
            - texlive-binaries
          sources:
            - hvr-ghc

    - <<: *complete-job
      env: GHC_VER=8.2.2 CABAL_VER=2.0
      addons:
        apt:
          packages:
            - cabal-install-2.0
            - ghc-8.2.2
            - texlive-binaries
          sources:
            - hvr-ghc

    # Andreas, 2019-11-13, issue #4177, temporarily disable 8.0
    # - <<: *complete-job
    #   env: GHC_VER=8.0.2 CABAL_VER=1.24
    #   addons:
    #     apt:
    #       packages:
    #         - cabal-install-1.24
    #         - ghc-8.0.2
    #         - texlive-binaries
    #       sources:
    #         - hvr-ghc

    - stage: main
      os: windows
      cache:
        directories:
          - $LOCALAPPDATA/Programs/stack
          - $APPDATA/stack
      language: c
      env:
        - GHC_VER=8.8.1 ICU_VER=58.2-3
      before_install:
        - export AGDA_STACK_BUILD_FLAGS="--flag Agda:enable-cluster-counting"
        - export ARGS="--stack-yaml stack-${GHC_VER}.yaml --no-terminal --system-ghc"

        - travis_retry choco install haskell-stack --no-progress
      install:
        - travis_retry wget -q http://repo.msys2.org/mingw/x86_64/mingw-w64-x86_64-icu-${ICU_VER}-any.pkg.tar.xz
        - yes | stack --compiler ghc-${GHC_VER} exec -- pacman -U mingw-w64-x86_64-icu-${ICU_VER}-any.pkg.tar.xz

        - stack build --compiler ghc-${GHC_VER} text-icu
        - stack build ${ARGS} --only-dependencies ${AGDA_STACK_BUILD_FLAGS}
      script:
        - travis_wait 35 stack build ${ARGS} ${AGDA_STACK_BUILD_FLAGS} --ghc-options=-O0

    ##############################################################################
    # Documentation stage
    #
    # Converting the user manual to html and pdf is fast (< 2min).
    - stage: documentation
      name: User Manual
      language: python
      python: "3.4"
      before_install:
        - export BUILD_DIR=$HOME/dist
        - export PATH=$HOME/.local/bin:$PATH
        - export PATH=$HOME/texlive/bin/x86_64-linux:$PATH
      install:
        - .travis/manual_install
      ##############################################################################
      # Making the user manual

      # Not running `make user-manual-linkcheck`.
      script:
        - make user-manual-html
        - make user-manual-pdf

    # Test documentation: haddock, user-manual.
    # Since `stack haddock` compiles Agda but `cabal haddock` does
    # not, this test is faster using `BUILD=CABAL` [Issue #2188].
    - stage: documentation
      name: Haddock
      env: GHC_VER=8.8.1 CABAL_VER=2.4
      addons:
        apt:
          packages:
            - cabal-install-2.4
            - ghc-8.8.1
          sources:
            - hvr-ghc
      before_install:
        - export PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:$PATH
        - export BUILD_DIR=$HOME/dist
        - export PARALLEL_TESTS=2
        - export PATH=$HOME/.cabal/bin:$PATH
      install:
        - .travis/haddock_install

      ##############################################################################
      # Testing Haddock [Issue 1773]
      script:
        - make BUILD_DIR=$BUILD_DIR haddock
