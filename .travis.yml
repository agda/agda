# Liang-Ting Chen 2019-09-07:
# Switched to Build Stages

# NB: don't set `language: haskell` here.
language: c

# Request Ubuntu Trusty (14.04 LTS).
dist: trusty

# Explicitly request sudo-enabled virtual environments [Issue #1992].
sudo: required

##############################################################################
# Every master and maintenance branches >= 2.5 or >= maint-2.4 must
# be here. You can also add your private branches if you want travis to
# test them.

branches:
  only:
    - master
    - future
    - maint-2.4
    - stable-2.5
    - /^release-.*/
    # Test all issue* branches. Saves you opening a PR.
    - /^issue.*/

##############################################################################
# The submodule is only needed by stdlib compiler test, so
# it is fetched manually in the `install` section.
#
git:
  submodules: false

##############################################################################
# Stages:
#

stages:
  - name: compilation
    if: NOT (branch =~ /^release-.*/) AND NOT (tag IS present) AND NOT (commit_message =~ complete\s+tests)
  - name: main
    if: NOT (branch =~ /^release-.*/) AND NOT (tag IS present) AND NOT (commit_message =~ complete\s+tests)
  - name: complete
    if: (branch =~ /^release-.*/) OR (tag IS present) OR (commit_message =~ complete\s+tests)

jobs:
  allow_failures:
    # - env: TEST=USER_MANUAL BUILD=NOTHING
    #   language: python
    #   python: "3.4"
  # Builds are loooong, we want to send an email as fast as possible.
  fast_finish: true

  include:
    - stage: compilation
      env:
        GHC_VER=8.8.1
      cache:
        directories:
          - $HOME/.stack
          - $TRAVIS_BUILD_DIR/.stack-work
          - $HOME/.local/bin
      before_install:
        # Install ghc
        - sudo -E apt-add-repository -y "ppa:hvr/ghc"
        - travis_apt_get_update
        - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install ghc-${GHC_VER}

        - export PATH=/opt/ghc/$GHC_VER/bin:$PATH
        - mkdir -p ~/.local/bin && export PATH=$HOME/.local/bin:$PATH

        # Install stack
        - travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
        - export ARGS="--stack-yaml stack-${GHC_VER}.yaml --no-terminal --system-ghc"
        - export FLAGS="--flag Agda:enable-cluster-counting"

        - echo "*** GHC version ***"     && ghc     --version &&
          echo "*** Stack version ***"   && stack   --version &&
          echo "*** Haddock version ***" && haddock --version &&
          echo "*** Emacs version ***"   && emacs   --version | sed 2q
      install:
        - stack build Agda ${ARGS} ${FLAGS} --test --no-run-tests --only-dependencies
      script:
        - stack build Agda ${ARGS} ${FLAGS} --test --no-run-tests
        # shelltestrunner is used by `make test-size-solver`
        # we need to cache it first.
        - stack install shelltestrunner ${ARGS}

#    # Test documentation: haddock, user-manual.
#    # Since `stack haddock` compiles Agda but `cabal haddock` does
#    # not, this test is faster using `BUILD=CABAL` [Issue #2188].
#    - stage: compilation
#      name: Haddock
#      env: GHC_VER=8.8.1 CABAL_VER=2.4
#      addons:
#        apt:
#          packages:
#            - cabal-install-2.4
#            - ghc-8.8.1
#          sources:
#            - hvr-ghc
#      before_install:
#        - export PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:$PATH
#        - export BUILD_DIR=$HOME/dist
#        - export PARALLEL_TESTS=2
#        - export PATH=$HOME/.cabal/bin:$PATH
#      install:
#        - .travis/haddock_install
#
#      ##############################################################################
#      # Testing Haddock [Issue 1773]
#      script:
#        - make BUILD_DIR=$BUILD_DIR haddock
    - &main-job
      stage: main
      name: "Successful and failing tests"
      env:
        GHC_VER=8.8.1
      addons:
        apt:
          packages:
            - ghc-8.8.1
            - cabal-install-3.0
            - texlive-binaries
          sources:
            - hvr-ghc
      cache:
        directories:
          - $HOME/.stack
          - ${TRAVIS_BUILD_DIR}/.stack-work
          - $HOME/.local/bin
      before_install:
        # Test suites shouldn't touch global stack packages, so we try to avoid changing its database.
        - cp ${HOME}/.stack/stack.sqlite3 $HOME/stack.sqlite3.ori

        # Setup ghc & cabal path
        - export PATH=/opt/ghc/$GHC_VER/bin:$PATH
        - export PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:$PATH
        - export PATH=$HOME/.cabal/bin:$PATH
        # Install stack
        - mkdir -p ~/.local/bin && export PATH=$HOME/.local/bin:$PATH
        - travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
        - export PATH=$HOME/.local/bin:$PATH
        - export PATH=$HOME/texlive/bin/x86_64-linux:$PATH

        - export PARALLEL_TESTS=2
        - export FLAGS="--flag Agda:enable-cluster-counting"
        - export ARGS="--stack-yaml stack-${GHC_VER}.yaml --no-terminal --system-ghc"
        - export AGDA_TESTS_OPTIONS="-j${PARALLEL_TESTS} --hide-successes"
        - export BUILD_DIR=$(pwd)/$(stack ${ARGS} path --dist-dir)
        - export MAKE_CMD="make AGDA_TESTS_OPTIONS=${ARGA_TESTS_OPTIONS} TASTY_ANSI_TRICKS=false BUILD_DIR=$BUILD_DIR"
      ##############################################################################
      script:
        - stack ${ARGS} exec -- ${MAKE_CMD} bugs
        - stack ${ARGS} exec -- ${MAKE_CMD} succeed
        - stack ${ARGS} exec -- ${MAKE_CMD} fail
      before_cache:
        - mv $HOME/stack.sqlite3.ori ${HOME}/.stack/stack.sqlite3
    - <<: *main-job
      name: "Test suites using standard library"
      git:
        submodules: true
      script:
        - stack ${ARGS} exec -- ${MAKE_CMD} library-test
        - stack ${ARGS} exec -- ${MAKE_CMD} lib-succeed
        - stack ${ARGS} exec -- ${MAKE_CMD} lib-interaction
        - stack ${ARGS} exec -- ${MAKE_CMD} stdlib-compiler-test
    - <<: *main-job
      name: "Compiler tests and benchmark"
      script:
        - stack ${ARGS} exec -- ${MAKE_CMD} compiler-test
        - stack ${ARGS} exec -- ${MAKE_CMD} benchmark-without-logs
    - <<: *main-job
      name: "Other test suites"
      script:
        - stack ${ARGS} exec -- ${MAKE_CMD} interaction
        - stack ${ARGS} exec -- ${MAKE_CMD} interactive
        - stack ${ARGS} exec -- ${MAKE_CMD} DONT_RUN_LATEX="Y" latex-html-test
        - stack ${ARGS} exec -- ${MAKE_CMD} examples
        - stack ${ARGS} exec -- ${MAKE_CMD} api-test
        - stack ${ARGS} exec -- ${MAKE_CMD} user-manual-test
        - stack ${ARGS} exec -- ${MAKE_CMD} internal-tests
        - stack ${ARGS} exec -- ${MAKE_CMD} testing-emacs-mode

        - travis_retry cabal v1-update
        - make TAGS

        # Build & install size-solver
        - stack build ${ARGS} ${FLAGS} size-solver
        - mkdir -p src/size-solver/dist/build/size-solver
        - cp $(stack path ${ARGS} --local-install-root)/bin/size-solver src/size-solver/dist/build/size-solver/size-solver
        # Test size-solver
        - make -C src/size-solver/ test

        # Build agda-bisect
        - make install-agda-bisect

    - &complete-job
      stage: complete
      env: GHC_VER=8.8.1 CABAL_VER=2.4
      before_install:
        - sudo -E apt-add-repository -y "ppa:hvr/ghc"
        - travis_apt_get_update
        - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install ghc-${GHC_VER} cabal-install-${CABAL_VER}
        - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install texlive-binaries

        - export PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:$PATH
        - export PATH=$HOME/.local/bin:$PATH
        - export BUILD_DIR=$HOME/dist
        - export PARALLEL_TESTS=2
        - export PATH=$HOME/.cabal/bin:$PATH
        - export PATH=$HOME/texlive/bin/x86_64-linux:$PATH
          # - export AGDA_HOME=`pwd` this is $TRAVIS_BUILD_DIR
      install:
        - .travis/cabal_install
      ##############################################################################
      script:
        - .travis/cabal_script
    - <<: *complete-job
      env: GHC_VER=8.6.5 CABAL_VER=2.4
    - <<: *complete-job
      env: GHC_VER=8.4.4 CABAL_VER=2.2
    - <<: *complete-job
      env: GHC_VER=8.2.2 CABAL_VER=2.0
    - <<: *complete-job
      env: GHC_VER=8.0.2 CABAL_VER=1.24
