# Liang-Ting Chen 2019-09-07:
# Switched to Build Stages

# NB: don't set `language: haskell` here.
language: c

# Request Ubuntu Trusty (14.04 LTS).
dist: trusty

# Explicitly request sudo-enabled virtual environments [Issue #1992].
sudo: required

cache:
  directories:
  - $HOME/.stack

##############################################################################
# Every master and maintenance branches >= 2.5 or >= maint-2.4 must
# be here. You can also add your private branches if you want travis to
# test them.

branches:
  only:
    - master
    - future
    - maint-2.4
    - stable-2.5
    - release-2.5.4.2
    - release-2.6.0.1

##############################################################################
# Required Ubuntu packages

# The LaTeX/HTML test-suite requires:
# * `kpsewhich` (included in texlive-binaries)

##############################################################################
# Stages (Liang-Ting Chen, 2019-07-09, suggested by Andreas)
#
# - Compilation only: Agda, user manual, and haddock are compiled (via Stack,
#   python, cabal, respectively) against all supported.
#
#   The rationale is based on the comment:
#     Andreas, 2019-08-20, run faster test first.
#     The just-compilation tests using stackage fast (< 10 min).
#     This allows for quick feedback should compilation break on one of the ghc versions.
#
#
# - Full tests: Agda is compiled via Cabal and tested, including the test
#   suite, the benchmark suite, and the compilation with a specific set of
#   dependencies, the testing of other programs like `hTags`, etc.)
#

# Travis runs the builds on this order.

stages:
  - name: stackage
  - name: main
    if: branch != master OR type = pull_request OR commit_message =~ main_tests|full_tests
  - name: documentation
    if: branch = master OR commit_message =~ doc_tests|full_tests

jobs:
  allow_failures:
    # - env: TEST=USER_MANUAL BUILD=NOTHING
    #   language: python
    #   python: "3.4"
  # Builds are loooong, we want to send an email as fast as possible.
  fast_finish: true

  include:
    - &no-test-job
      stage: stackage
      env: GHC_VER=8.6.5 BUILD=STACK
      addons:
        apt:
          packages:
            - ghc-8.6.5
          sources:
            - hvr-ghc
      before_install:
        - export PATH=/opt/ghc/$GHC_VER/bin:$PATH
        - mkdir -p ~/.local/bin
        - travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
        - export PATH=$HOME/.local/bin:$PATH
      install:
        - export ARGS="--stack-yaml stack-${GHC_VER}.yaml --system-ghc"
        - export BUILD_DIR=$HOME/dist
        - export AGDA_STACK_BUILD_FLAGS="--flag Agda:cpphs --flag Agda:debug --flag Agda:enable-cluster-counting"
        - .travis/stack_install
      script:
        skip

    - <<: *no-test-job
      env: GHC_VER=8.4.4 BUILD=STACK
      addons:
        apt:
          packages:
            - ghc-8.4.4
          sources:
            - hvr-ghc

    - <<: *no-test-job
      env: GHC_VER=8.2.2 BUILD=STACK
      addons:
        apt:
          packages:
            - ghc-8.2.2
          sources:
            - hvr-ghc

    - <<: *no-test-job
      env: GHC_VER=8.0.2 BUILD=STACK
      addons:
        apt:
          packages:
            - ghc-8.0.2
          sources:
            - hvr-ghc

    # The builds involving the testsuite (60-80min) are run then.
    - &complete-job
      stage: main
      env: GHC_VER=8.6.5 BUILD=CABAL CABAL_VER=2.4
      addons:
        apt:
          packages:
            - cabal-install-2.4
            - ghc-8.6.5
            - texlive-binaries
          sources:
            - hvr-ghc
      before_install:
        - export PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:$PATH
      install:
        - export BUILD_DIR=$HOME/dist

        - export PARALLEL_TESTS=2
        - export PATH=$HOME/.cabal/bin:$PATH
        - export PATH=$HOME/texlive/bin/x86_64-linux:$PATH
        - export AGDA_HOME=`pwd`
        - export NODE_VERSION=v0.12.16
        - export NODE_DIR=node-${NODE_VERSION}-linux-x64
        - export NODE_TARBALL=${NODE_DIR}.tar.xz
        - export PATH=${HOME}/${NODE_DIR}/bin:$PATH
        - .travis/cabal_install
      ##############################################################################
      script: .travis/cabal_script

    - <<: *complete-job
      env: GHC_VER=8.4.4 BUILD=CABAL CABAL_VER=2.2
      addons:
        apt:
          packages:
            - cabal-install-2.2
            - ghc-8.4.4
            - texlive-binaries
          sources:
            - hvr-ghc

    - <<: *complete-job
      env: GHC_VER=8.2.2 BUILD=CABAL CABAL_VER=2.0
      addons:
        apt:
          packages:
            - cabal-install-2.0
            - ghc-8.2.2
            - texlive-binaries
          sources:
            - hvr-ghc

    - <<: *complete-job
      env: GHC_VER=8.0.2 BUILD=CABAL CABAL_VER=1.24
      addons:
        apt:
          packages:
            - cabal-install-1.24
            - ghc-8.0.2
            - texlive-binaries
          sources:
            - hvr-ghc

    # Converting the user manual to html and pdf is fast (< 2min).
    - stage: documentation
      name: User Manual
      env: BUILD=NOTHING
      language: python
      python: "3.4"
      install:
        - export BUILD_DIR=$HOME/dist
        - export PATH=$HOME/.local/bin:$PATH
        - export PATH=$HOME/texlive/bin/x86_64-linux:$PATH
        - .travis/manual_install
      ##############################################################################
      # Making the user manual

      # Not running `make user-manual-linkcheck`.
      script:
        - make user-manual-html
        - make user-manual-pdf

    # Test documentation: haddock, user-manual.
    # Since `stack haddock` compiles Agda but `cabal haddock` does
    # not, this test is faster using `BUILD=CABAL` [Issue #2188].
    - stage: documentation
      name: Haddock
      env: GHC_VER=8.6.5 BUILD=CABAL CABAL_VER=2.4
      addons:
        apt:
          packages:
            - cabal-install-2.4
            - ghc-8.6.5
          sources:
            - hvr-ghc
      before_install:
        - export PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:$PATH
      install:
        - export BUILD_DIR=$HOME/dist
        - .travis/haddock_install

      ##############################################################################
      # Testing Haddock [Issue 1773]
      script:
        - make BUILD_DIR=$BUILD_DIR haddock
