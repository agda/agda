When releasing a stable version of Agda, the following procedure can
be followed:

* First, release a release candidate (see
  notes/agda-stable-releases-candidates).

* Update in the bug tracker the milestone field of open issues to the
  next Agda version.

* Verify that the Travis builds have no errors.

* Get a clean Agda repository.

    MAJORVERSION=<current-Agda-version-eg-2.4.0>
    VERSION=<current-stable-version-eg-2.4.0.2>
    git clone git@github.com:agda/agda.git agda-release
    cd agda-release
    git checkout stable-$MAJORVERSION

* Change VERSION to MAJORVERSION in:

    .ghci
    Agda.cabal
    default.nix
    /doc/user-manual/conf.py (twice)
    mk/versions.mk
    src/data/emacs-mode/agda2-mode.el
    src/data/emacs-mode/agda2-mode-pkg.el
    src/size-solver/size-solver.cabal
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Obtain and install the standard library branch related to the Agda
  bugfix version:

    make up-to-date-std-lib

* Finish the CHANGELOG.

* Update the README.md, if necessary.

* Update the LICENSE file, if necessary.

* Add a second source-repository section to Agda.cabal:

    source-repository this
      type:     git
      location: https://github.com/agda/agda.git
      tag:      v$VERSION

* Remove -Werror and -fprof-auto from Agda.cabal (this is required by
  `cabal --check`).

* Run the test-suite:

    make install
    make test

  Note that "make install" invokes "agda-mode compile", which should
  ensure that the Emacs mode can be compiled without errors or
  warnings (except for the "cl package required at runtime" warning).

* Remove the Cabal tests-suites `agda-tests` and `internal-tests` from
  Agda.cabal.

* Update the user manual:

    make user-manual-pdf

* Build source distributions:

    cabal configure
    cabal check
    cabal sdist

* Ensure that the package builds properly (with multiple versions of GHC if
  possible) in Linux, MacOS X and Windows.

    BASE=`pwd`
    VERSION=<version>
    cd ${TMPDIR:-/tmp}
    tar xzf $BASE/dist/Agda-$VERSION.tar.gz
    cd Agda-$VERSION
    cabal install

  Do not forget to test the Emacs mode.

* Tag the relase (do not forget to record the changes above first):

    cd $BASE
    git tag -a v$VERSION -m "Agda $VERSION stable release"

* Upload the tarball and the documentation (tested with
  cabal-install >= 2.0.0.0):

    cd $BASE
    cabal upload --publish dist/Agda-$VERSION.tar.gz
    cabal upload --publish -d dist/Agda-$VERSION.tar.gz

* Is the documentation missing on Hackage (see #1940)? You can use the
  `neil` program for uploading the documentation:

    neil doc --username=YourHackageUsername

* Restore the Cabal tests-suites `agda-tests` and `internal-tests`
  from Agda.cabal.

* Restore -Werror and -fprof-auto in Agda.cabal.

* Remove the "this" source-repository section from the Cabal
  file. (This would be unnecessary if we had two repositories, one
  stable and one for development.)

* Update the version number to the new version

    NEWVERSION=<VERSION + 1>

  in the following files:

    Agda.cabal
    src/data/emacs-mode/agda2-mode.el
    src/size-solver/size-solver.cabal
    mk/versions.mk
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Add a new header to CHANGELOG.

* Create a new branch in the standard library repository from the
  VERSION branch called NEWVERSION.

* Disable force push on the NEWVERSION branch of the standard library, see

  https://help.github.com/articles/about-protected-branches/
  https://github.com/agda/agda-stdlib/settings/branches

* Update the git submodule branch, by running the following at the root
  of the main repository:

    git config -f .gitmodules submodule.std-lib.branch NEWVERSION
    git submodule sync
    git submodule update --init --remote std-lib

  Remember to add the new reference to the index before committing:

    git add std-lib

* Push all changes and merge into 'master' branch (requires Git >= 1.8.3).

    git push --follow-tags

    git checkout master
    git merge stable-$MAJORVERSION

* Restore version numbers in 'master' (possibly by just resolving the
  merge conflicts):

    .ghci
    Agda.cabal
    default.nix
    /doc/user-manual/conf.py (twice)
    mk/versions.mk
    src/data/emacs-mode/agda2-mode.el
    src/size-solver/size-solver.cabal
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Push master

    git push

* Close in the bug tracker the milestone VERSION.

* Update Agda Manual on Readthedocs.org (see Issue #2844)

  ** You need Admin permissions on the Agda readthedocs.org project
     (current admins: asr, andreasabel, phile314)

  ** Go to readthedocs.org -> Agda Project -> Admin -> Versions

  ** Mark $VERSION as active

  ** Set the default documentation version to $VERSION

* Announce on the Agda developers mailing list the creation of the
  NEWVERSION branch in the standard library to be used with the stable
  branch of Agda.

* Update the Agda Wiki:

  ** Update the Download page:

     *** Move the current version information to the old releases
         section.

     *** Update the last release information.

  ** Update the Main page.

  ** Update the standard library page (tested with Agda $VERSION).

* Announce the release of the new version on the Agda mailing lists
  (users and developers).
