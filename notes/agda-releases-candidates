When releasing a release candidate (RC) for a new version of Agda, the
following procedure can be followed:

* The $FILES variable represents the files where it is necessary to
  change the version number.

    $FILES=
      .ghci
      Agda.cabal (twice)
      default.nix
      doc/user-manual/conf.py
      mk/versions.mk
      src/data/emacs-mode/agda2-mode.el
      src/data/emacs-mode/agda2-mode-pkg.el
      src/size-solver/size-solver.cabal
      test/interaction/Issue1244a.out
      test/interaction/Issue1244b.out

* Verify that the Travis builds have no errors.

* Get a clean Agda repository.

    git clone git@github.com:agda/agda agda.release
    cd agda-release

* The version of the RC is the current version in master + current date

    $RC_VERSION=<current-master-version-current-date-eg-2.5.0.20160212>

* Update the version numbers to $RC_VERSION in $FILES.

* Obtain and install the standard library branch related to the Agda
  new version.

    make up-to-date-std-lib

* Finish the release notes in
  doc/release-notes/<version-written-with-dashes>.txt.

  Copy the contents of the release notes to the top of the CHANGELOG file.

* Update README.md, if necessary.

* Update the LICENSE file, if necessary.

* Remove -Werror and -fprof-auto from Agda.cabal (this is required by
  `cabal --check`).

* Ensure that cabal haddock works with the latest version supported of
  GHC:

    make haddock

* Run the test-suite:

    make compile-emacs-mode
    make test

  Note that "compile-emacs-mode" invokes "agda-mode compile", which
  should ensure that the Emacs mode can be compiled without errors or
  warnings (except for the "cl package required at runtime" warning).

* Remove the Cabal tests-suites `agda-tests` and `internal-tests` from
  Agda.cabal.

* Build source distributions:

    cabal configure
    cabal check
    cabal sdist

* Ensure that the package builds properly (with multiple versions of GHC if
  possible) in Linux, MacOS X and Windows.

    BASE=`pwd`
    cd ${TMPDIR:-/tmp}
    tar xzf $BASE/dist/Agda-$RC_VERSION.tar.gz
    cd Agda-$RC_VERSION
    cabal install

  Do not forget to test:

  ** The Emacs mode

* Tag the release candidate (do not forget to record the changes above
  first):

    cd $BASE
    git tag -a v$RC_VERSION -m "Agda $VERSION release candidate n"

* Restore the Cabal tests-suites `agda-tests` and `internal-tests`
  from Agda.cabal.

* Restore -Werror and -fprof-auto in Agda.cabal.

* Restore the version numbers $VERSION in $FILES.

* Tag and push the standard library used for testing the release
  candidate (requires Git >= 1.8.3) (untested):

    cd std-lib
    git tag -a v$RC_VERSION -m "Agda standard library compatible with Agda $VERSION release candidate n"
    git push --follow-tags

* Push all changes into the master branch (requires Git >= 1.8.3).

    cd $BASE
    git push --follow-tags

* Announce the release candidate on the Agda mailing lists (users and
  developers).

  Note that the announce shouldn't include

    https://github.com/agda/agda/releases/tag/$RC_VERSION.tar.gz

  but $BASE/dist/Agda-$RC_VERSION.tar.gz.

------------------------------------------------------------------------------
Outdated (2016-02-12)

* Disable sharing by default. Note that this change induces some
  changes in the test suite.

  N.B. that succeed/Issue1351.agda fails when sharing is disable.

  ** Disable sharing by default in the Agda.Interaction.Options
     module.

  ** Change the message "(default: ON)" to "(default: OFF)" in the
     above module.

